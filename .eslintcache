[{"/home/mpak/Документы/vsProjects/threejs/src/index.js":"1","/home/mpak/Документы/vsProjects/threejs/src/App.js":"2","/home/mpak/Документы/vsProjects/threejs/src/serviceWorker.js":"3","/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/index.js":"4","/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/chair2.js":"5","/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/leftSlider/index.js":"6"},{"size":481,"mtime":1607595718940,"results":"7","hashOfConfig":"8"},{"size":204,"mtime":1607595718940,"results":"9","hashOfConfig":"8"},{"size":5086,"mtime":1607595718948,"results":"10","hashOfConfig":"8"},{"size":12743,"mtime":1608621655003,"results":"11","hashOfConfig":"8"},{"size":3007,"mtime":1608637731159,"results":"12","hashOfConfig":"8"},{"size":4718,"mtime":1608617431652,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jtnme3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/mpak/Документы/vsProjects/threejs/src/index.js",[],["29","30"],"/home/mpak/Документы/vsProjects/threejs/src/App.js",[],"/home/mpak/Документы/vsProjects/threejs/src/serviceWorker.js",[],"/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/index.js",["31","32","33","34","35","36","37"],"import React, { useEffect, useRef, useState } from 'react'\nimport Chair2 from './chair2.js'\n\nimport classes from './Calculator.module.scss'\n\nimport Slider from '@material-ui/core/Slider'\nimport { LeftSlider } from './leftSlider'\n\nlet baseValueSplitter3000 = {\n  1: 2116.47,\n  2: 2717.37,\n  3: 2911.75,\n  4: 3189.01,\n  5: 4373.05,\n  6: 4610.85,\n  7: 5308.45,\n  8: 7042.57,\n  9: 10634.55,\n  10: 12314.06,\n  11: 14511.5,\n  12: 16063.13,\n  13: 19387.65,\n  14: 22210.27,\n  15: 24301.59,\n  16: 34511.13,\n  17: 36847.06,\n}\nlet baseValueSplitter1500 = {\n  1: 2717.37,\n  2: 2911.75,\n  3: 3449.02,\n  4: 4373.05,\n  5: 5000.85,\n  6: 5852.61,\n  7: 6437.4,\n  8: 7710.5,\n  9: 11855.93,\n  10: 13570.21,\n  11: 15485.96,\n  12: 17513.94,\n  13: 20432.61,\n  14: 22716.63,\n  15: 25374.29,\n  16: 38396.78,\n  17: 42433.87,\n}\nlet baseValueSplitter1000 = {\n  1: 2911.75,\n  2: 3189.01,\n  3: 4426.62,\n  4: 5288.93,\n  5: 5890.96,\n  6: 7996.22,\n  7: 9121.22,\n  8: 11358.63,\n  9: 13201.19,\n  10: 15718.66,\n  11: 19759.14,\n  12: 21530.68,\n  13: 25388.25,\n  14: 27585.34,\n  15: 30098.79,\n  16: 45610.9,\n  17: 51185.04,\n}\nlet baseValueSplitter750 = {\n  1: 4138.22,\n  2: 4600.7,\n  3: 5419.31,\n  4: 6441.51,\n  5: 8064.3,\n  6: 8720.84,\n  7: 10006.41,\n  8: 12053.18,\n  9: 14128.34,\n  10: 16439.58,\n  11: 22018.58,\n  12: 25235.8,\n  13: 32137.47,\n  14: 35285.22,\n  15: 42691.56,\n  16: 51009.13,\n  17: 60571.27,\n}\nlet baseValueSplitter500 = {\n  1: 4138.22,\n  2: 4600.7,\n  3: 5419.31,\n  4: 6441.51,\n  5: 8064.3,\n  6: 8720.84,\n  7: 10006.41,\n  8: 12053.18,\n  9: 14128.34,\n  10: 16439.58,\n  11: 22018.58,\n  12: 25235.8,\n  13: 32137.47,\n  14: 35285.22,\n  15: 42691.56,\n  16: 51009.13,\n  17: 60571.27,\n}\nlet baseValueSplitter0 = {\n  1: 4138.22,\n  2: 4600.7,\n  3: 5419.31,\n  4: 6441.51,\n  5: 8064.3,\n  6: 8720.84,\n  7: 10006.41,\n  8: 12053.18,\n  9: 14128.34,\n  10: 16439.58,\n  11: 22018.58,\n  12: 25235.8,\n  13: 32137.47,\n  14: 35285.22,\n  15: 42691.56,\n  16: 51009.13,\n  17: 60571.27,\n}\n\nconst returnOptionText = (value) => {\n  let text = ''\n  switch (value) {\n    case '0':\n      text = 'Замена обмотки не требуется'\n      break\n    case '0.9':\n      text = 'Электродвигателя без ротора'\n      break\n    case '1':\n      text = 'ЭД с фазным ротором'\n      break\n    case '1.001':\n      text = 'ЭД с короткозамкнутым ротором'\n      break\n  }\n  return text\n}\n\nconst returnSpeedRealValue = (value) => {\n  let speedValue = ''\n  switch (value.toString()) {\n    case '0':\n      speedValue = '3000'\n      break\n    case '1':\n      speedValue = '1500'\n      break\n    case '2':\n      speedValue = '1000'\n      break\n    case '3':\n      speedValue = '750'\n      break\n    case '4':\n      speedValue = 'от 500'\n      break\n    case '5':\n      speedValue = 'до 500'\n      break\n    default: {\n      speedValue = 'до 500'\n    }\n  }\n  return speedValue\n}\n\nexport const Calculator = ({ tag_h1 = null, isActive = true, coeff }) => {\n  const [animType, setAnimType] = useState(0)\n  const [animPower, setAnimPower] = useState(0)\n  const [animSpeed, setAnimSpeed] = useState(0)\n\n  const [calcResult, setCalcResult] = useState(0)\n  const [activeSlider, setActiveSlider] = useState(4)\n\n  const [sliderValue, setSliderValue] = useState(0)\n  const [inputValue, setInputValue] = useState(1.001)\n\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue)\n  }\n\n  const speedClickHandler = (value) => {\n    setAnimSpeed(animSpeed + 1)\n    setSliderValue(value)\n  }\n\n  const calcResultHandler = () => {\n    let baseValueArr = baseValueSplitter3000\n    switch (sliderValue) {\n      case 5:\n        baseValueArr = baseValueSplitter0\n        break\n      case 4:\n        baseValueArr = baseValueSplitter500\n        break\n      case 3:\n        baseValueArr = baseValueSplitter750\n        break\n      case 2:\n        baseValueArr = baseValueSplitter1000\n        break\n      case 1:\n        baseValueArr = baseValueSplitter1500\n        break\n      case 0:\n        baseValueArr = baseValueSplitter3000\n        break\n    }\n\n    const newInputValue = inputValue == 0.1 ? 0 : inputValue\n\n    const newValue = Math.floor(baseValueArr[activeSlider] * newInputValue * 1)\n    setCalcResult(newValue)\n  }\n\n  useEffect(() => {\n    let text = ''\n    if (inputValue == '0.1') {\n      text = returnOptionText('0')\n    } else {\n      text = returnOptionText(inputValue)\n    }\n\n    calcResultHandler()\n  }, [activeSlider, sliderValue, inputValue, coeff])\n\n  const [filterImg, setFilterImg] = useState('ЭД с короткозамкнутым ротором')\n  const [openFilter, setOpenFilter] = useState(false)\n  const [filterActiveType, setFilterActiveType] = useState('1.001')\n\n  const clickListener = () => {\n    if (openFilter) {\n      setOpenFilter(false)\n      setFilterImg(returnOptionText(inputValueRef.current))\n    }\n    document.removeEventListener('click', clickListener)\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', clickListener)\n    return () => document.removeEventListener('click', clickListener)\n  }, [openFilter])\n\n  const openFilterHandler = () => {\n    if (openFilter) {\n      return\n    }\n    setOpenFilter(true)\n  }\n\n  const inputValueRef = useRef('1.001')\n\n  const selectFilterHandler = (value, num) => {\n    inputValueRef.current = value\n    setFilterActiveType(value)\n    setFilterImg(returnOptionText(value))\n    setInputValue(value)\n    setAnimType(num)\n  }\n\n  const selectImageHandler = (value) => {\n    setFilterImg(returnOptionText(value))\n  }\n\n  return (\n    <>\n      <div className={classes.Calculator}>\n        <div className={'containerNew'}>\n          <div className={classes.main}>\n            <header className={classes.title}>\n              <h1>{tag_h1 || 'Расчитать онлайн'}</h1>\n            </header>\n            <div className={classes.input}>\n              <p>Замена обмотки:</p>\n              <div\n                className={openFilter ? classes.wrapperActive : classes.wrapper}\n              >\n                <svg\n                  onClick={openFilterHandler}\n                  version=\"1.1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <title>arrow_forward_ios</title>\n                  <path d=\"M5.859 4.125l2.156-2.109 9.984 9.984-9.984 9.984-2.156-2.109 7.922-7.875z\"></path>\n                </svg>\n                <div onClick={openFilterHandler} className={classes.filter}>\n                  {filterImg}\n                  <span></span>\n                </div>\n                <div\n                  className={\n                    openFilter ? classes.stretchActive : classes.stretch\n                  }\n                >\n                  <ul>\n                    <li\n                      className={\n                        filterActiveType === '1.001' ? classes.activeLi : ''\n                      }\n                      onMouseEnter={() => selectImageHandler('1.001')}\n                      onClick={() => selectFilterHandler('1.001', 0)}\n                    >\n                      {returnOptionText('1.001')}\n                    </li>\n                    <li\n                      className={\n                        filterActiveType === '0.9' ? classes.activeLi : ''\n                      }\n                      onMouseEnter={() => selectImageHandler('0.9')}\n                      onClick={() => selectFilterHandler('0.9', 1)}\n                    >\n                      {returnOptionText('0.9')}\n                    </li>\n\n                    <li\n                      className={\n                        filterActiveType === '1' ? classes.activeLi : ''\n                      }\n                      onMouseEnter={() => selectImageHandler('1')}\n                      onClick={() => selectFilterHandler('1', 2)}\n                    >\n                      {returnOptionText('1')}\n                    </li>\n\n                    <li\n                      className={\n                        filterActiveType === '0' ? classes.activeLi : ''\n                      }\n                      onMouseEnter={() => selectImageHandler('0')}\n                      onClick={() => selectFilterHandler('0', 3)}\n                    >\n                      {returnOptionText('0')}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className={classes.sliderHeader}>\n              <p>\n                <span>POWER</span>, кВт\n              </p>\n              <p>\n                <span>SPEED</span>, об/мин\n              </p>\n            </div>\n          </div>\n          <div className={classes.main}>\n            <div className={classes.sliderBlock}>\n              <div className={classes.imgBlock}>\n                <Chair2\n                  animType={animType}\n                  animSpeed={animSpeed}\n                  animPower={animPower}\n                />\n                {/* <img src=\"/images/calculator/motor.png\" alt=\"motor\" /> */}\n              </div>\n              <div className={classes.slidersWrapper}>\n                <LeftSlider\n                  setSlide={setActiveSlider}\n                  activeSlide={activeSlider}\n                  animPower={animPower}\n                  setAnimPower={setAnimPower}\n                />\n                <div className={classes.rightSlider}>\n                  <div className={classes.slider}>\n                    <div className={classes.valuesBlock}>\n                      <span\n                        onClick={() => speedClickHandler(5)}\n                        className={\n                          sliderValue === 5 ? classes.spanActive : null\n                        }\n                      >\n                        до 500\n                      </span>\n                      <span\n                        onClick={() => speedClickHandler(4)}\n                        className={\n                          sliderValue === 4 ? classes.spanActive : null\n                        }\n                      >\n                        от 500\n                      </span>\n                      <span\n                        onClick={() => speedClickHandler(3)}\n                        className={\n                          sliderValue === 3 ? classes.spanActive : null\n                        }\n                      >\n                        750\n                      </span>\n                      <span\n                        onClick={() => speedClickHandler(2)}\n                        className={\n                          sliderValue === 2 ? classes.spanActive : null\n                        }\n                      >\n                        1000\n                      </span>\n                      <span\n                        onClick={() => speedClickHandler(1)}\n                        className={\n                          sliderValue === 1 ? classes.spanActive : null\n                        }\n                      >\n                        1500\n                      </span>\n                      <span\n                        onClick={() => speedClickHandler(0)}\n                        className={\n                          sliderValue === 0 ? classes.spanActive : null\n                        }\n                      >\n                        3000\n                      </span>\n                    </div>\n                    <div className={classes.rightSliderWrapper}>\n                      <Slider\n                        orientation=\"vertical\"\n                        aria-label={returnSpeedRealValue(sliderValue)}\n                        step={1}\n                        min={0}\n                        max={5}\n                        name={'sliderB'}\n                        value={\n                          typeof sliderValue === 'number' ? sliderValue : 0\n                        }\n                        onChange={handleSliderChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.main}>\n            <div\n              className={\n                !isActive ? classes.senderBlock : classes.activeSenderBlock\n              }\n            >\n              <div>\n                <span title={'цена указана с ндс'}>\n                  {calcResult}\n                  {!isActive ? '+' : ''} &#x20bd;\n                </span>\n              </div>\n              <div>\n                <span>\n                  уточнить <br /> стоимость\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/chair2.js",["38","39","40","41","42","43","44","45"],"/home/mpak/Документы/vsProjects/threejs/src/components/Calculator/leftSlider/index.js",["46","47"],"import React, { useEffect, useRef, useState } from 'react'\nimport classes from './leftSlider.module.scss'\nimport { useSwipeable } from 'react-swipeable'\n\nconst returnPowerRealValue = (value) => {\n  let powerValue = ''\n  switch (value.toString()) {\n    case '1':\n      powerValue = '1,1'\n      break\n    case '2':\n      powerValue = '1,5'\n      break\n    case '3':\n      powerValue = '2,2'\n      break\n    case '4':\n      powerValue = '3,0'\n      break\n    case '5':\n      powerValue = '4,0'\n      break\n    case '6':\n      powerValue = '5,5'\n      break\n    case '7':\n      powerValue = '7,5'\n      break\n    case '8':\n      powerValue = '11,0'\n      break\n    case '9':\n      powerValue = '15'\n      break\n    case '10':\n      powerValue = '18,5'\n      break\n    case '11':\n      powerValue = '22,0'\n      break\n    case '12':\n      powerValue = '30,0'\n      break\n    case '13':\n      powerValue = '37,0'\n      break\n    case '14':\n      powerValue = '45,0'\n      break\n    case '15':\n      powerValue = '55,0'\n      break\n    case '16':\n      powerValue = '75,0'\n      break\n    case '17':\n      powerValue = '90,0'\n      break\n  }\n  return powerValue\n}\n\nexport const LeftSlider = ({\n  activeSlide,\n  setSlide,\n  animPower,\n  setAnimPower,\n}) => {\n  const [leftSliderMargin, setLeftSliderMargin] = useState(-50)\n  const [sliderClasses, setSliderClasses] = useState({\n    [activeSlide + 1]: classes.preActive,\n    [activeSlide - 1]: classes.preActive,\n    [activeSlide]: classes.active,\n  })\n\n  const sliderRef = useRef()\n\n  useEffect(() => {\n    const sliderElem = sliderRef.current\n    // @ts-ignore\n    sliderElem.style.setProperty('--transformMargin', `${leftSliderMargin}px`)\n  }, [leftSliderMargin])\n\n  const leftSliderHandler = (e, value = 0) => {\n    let newActiveSlider = activeSlide\n    const marginValue = value ? value : +e.target.value\n\n    const setSlider = () => {\n      if (\n        (activeSlide === 17 && marginValue < 0) ||\n        (activeSlide === 1 && marginValue > 0)\n      ) {\n        return\n      }\n      if (marginValue > 0) {\n        newActiveSlider--\n      } else if (marginValue < 0) {\n        newActiveSlider++\n      }\n      setLeftSliderMargin((state) => state + marginValue)\n      setSliderClasses({\n        [newActiveSlider + 1]: classes.preActive,\n        [newActiveSlider - 1]: classes.preActive,\n        [newActiveSlider]: classes.active,\n      })\n      setSlide(newActiveSlider)\n      setAnimPower(animPower + 1)\n    }\n\n    setSlider()\n\n    if (e && e.velocity > 0.6) {\n      if (\n        (activeSlide >= 14 && marginValue < 0) ||\n        (activeSlide <= 3 && marginValue > 0)\n      ) {\n        return\n      }\n      setSlider()\n      setSlider()\n    } else if (e && e.velocity) {\n      if (\n        (activeSlide >= 15 && marginValue < 0) ||\n        (activeSlide <= 2 && marginValue > 0)\n      ) {\n        return\n      }\n      setSlider()\n    }\n  }\n\n  const handlers = useSwipeable({\n    onSwipedUp: (e) => leftSliderHandler(e, -34),\n    onSwipedDown: (e) => leftSliderHandler(e, 34),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true,\n  })\n\n  return (\n    <>\n      <div {...handlers} className={classes.leftSlider}>\n        <div className={classes.btnBlock}>\n          <button\n            aria-label={'Мощность вверх'}\n            onClick={leftSliderHandler}\n            value={+34}\n          ></button>\n          <button\n            aria-label={'Мощность вниз'}\n            onClick={leftSliderHandler}\n            value={-34}\n          ></button>\n        </div>\n        <div ref={sliderRef} className={classes.leftSliderWrapper}>\n          <div className={sliderClasses[1] || null}>1,1</div>\n          <div className={sliderClasses[2] || null}>1,5</div>\n          <div className={sliderClasses[3] || null}>2,2</div>\n          <div className={sliderClasses[4] || null}>3,0</div>\n          <div className={sliderClasses[5] || null}>4,0</div>\n          <div className={sliderClasses[6] || null}>5,5</div>\n          <div className={sliderClasses[7] || null}>7,5</div>\n          <div className={sliderClasses[8] || null}>11,0</div>\n          <div className={sliderClasses[9] || null}>15,0</div>\n          <div className={sliderClasses[10] || null}>18,5</div>\n          <div className={sliderClasses[11] || null}>22,0</div>\n          <div className={sliderClasses[12] || null}>30,0</div>\n          <div className={sliderClasses[13] || null}>37,0</div>\n          <div className={sliderClasses[14] || null}>45,0</div>\n          <div className={sliderClasses[15] || null}>55,0</div>\n          <div className={sliderClasses[16] || null}>75,0</div>\n          <div className={sliderClasses[17] || null}>90,0</div>\n        </div>\n      </div>\n    </>\n  )\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":126,"column":3,"nodeType":"54","messageId":"55","endLine":139,"endColumn":4},{"ruleId":"52","severity":1,"message":"53","line":193,"column":5,"nodeType":"54","messageId":"55","endLine":212,"endColumn":6},{"ruleId":"56","severity":1,"message":"57","line":214,"column":38,"nodeType":"58","messageId":"59","endLine":214,"endColumn":40},{"ruleId":"56","severity":1,"message":"57","line":222,"column":20,"nodeType":"58","messageId":"59","endLine":222,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":225,"column":7,"nodeType":"62","messageId":"63","endLine":225,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":229,"column":6,"nodeType":"66","endLine":229,"endColumn":52,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":246,"column":6,"nodeType":"66","endLine":246,"endColumn":18,"suggestions":"69"},{"ruleId":"60","severity":1,"message":"70","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":26},{"ruleId":"60","severity":1,"message":"71","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":6,"endColumn":13},{"ruleId":"60","severity":1,"message":"72","line":22,"column":44,"nodeType":"62","messageId":"63","endLine":22,"endColumn":53},{"ruleId":"60","severity":1,"message":"73","line":26,"column":10,"nodeType":"62","messageId":"63","endLine":26,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":51,"column":6,"nodeType":"66","endLine":51,"endColumn":8,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"76","line":58,"column":6,"nodeType":"66","endLine":58,"endColumn":16,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"78","line":64,"column":6,"nodeType":"66","endLine":64,"endColumn":17,"suggestions":"79"},{"ruleId":"64","severity":1,"message":"80","line":70,"column":6,"nodeType":"66","endLine":70,"endColumn":17,"suggestions":"81"},{"ruleId":"60","severity":1,"message":"82","line":5,"column":7,"nodeType":"62","messageId":"63","endLine":5,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":7,"column":3,"nodeType":"54","messageId":"55","endLine":59,"endColumn":4},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'text' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcResultHandler'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'clickListener'. Either include it or remove the dependency array.",["86"],"'UnsignedByteType' is defined but never used.","'useTexture' is defined but never used.","'materials' is assigned a value but never used.","'isOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions', 'loader', 'pmremGenerator', and 'scene'. Either include them or remove the dependency array.",["87"],"React Hook useEffect has missing dependencies: 'animate', 'motor.position', and 'motor.rotation'. Either include them or remove the dependency array.",["88"],"React Hook useEffect has missing dependencies: 'animatePower' and 'needUpdate'. Either include them or remove the dependency array.",["89"],"React Hook useEffect has missing dependencies: 'animateSpeed' and 'needUpdate'. Either include them or remove the dependency array.",["90"],"'returnPowerRealValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [activeSlider, sliderValue, inputValue, coeff, calcResultHandler]",{"range":"103","text":"104"},"Update the dependencies array to be: [clickListener, openFilter]",{"range":"105","text":"106"},"Update the dependencies array to be: [actions, loader, pmremGenerator, scene]",{"range":"107","text":"108"},"Update the dependencies array to be: [animType, animate, motor.position, motor.rotation]",{"range":"109","text":"110"},"Update the dependencies array to be: [animPower, animatePower, needUpdate]",{"range":"111","text":"112"},"Update the dependencies array to be: [animSpeed, animateSpeed, needUpdate]",{"range":"113","text":"114"},[4335,4381],"[activeSlider, sliderValue, inputValue, coeff, calcResultHandler]",[4943,4955],"[clickListener, openFilter]",[1434,1436],"[actions, loader, pmremGenerator, scene]",[1583,1593],"[animType, animate, motor.position, motor.rotation]",[1693,1704],"[animPower, animatePower, needUpdate]",[1804,1815],"[animSpeed, animateSpeed, needUpdate]"]